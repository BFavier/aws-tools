AWSTemplateFormatVersion: '2010-09-09'
Description: Firehose to S3 pipeline

Parameters:
  LogsBucketName:
    Type: String
    Description: Name of the existing s3 bucket to log into

  LogsPrefix:
    Type: String
    Default: ""
    Description: Prefix for the S3 bucket where logs will be stored (without starting slash)
  CompressionFormat:
    Type: String
    Default: GZIP
    AllowedValues:
      - UNCOMPRESSED
      - GZIP
      - SNAPPY
    Description: Compression format for the logs in s3
  WriteIntervalSeconds:
    Type: Number
    Default: '900'
    Description: Between 1 and 900. Maximum logs aggregation duration in seconds before the file is saved to s3.
  WriteSizeMB:
    Type: Number
    Default: '5'
    Description: Between 1 and 128. Maximum size in MB of the aggregated logs before the file is saved to s3.

Resources:
  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FirehoseS3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:GetObject"
                  - "s3:AbortMultipartUpload"
                Resource:
                  - !Sub "arn:aws:s3:::${LogsBucketName}/*"
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:GetBucketLocation"
                Resource: !Sub "arn:aws:s3:::${LogsBucketName}"
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "*"

  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamType: DirectPut
      DeliveryStreamName: !Sub "${AWS::StackName}"
      S3DestinationConfiguration:
        BucketARN: !Sub "arn:aws:s3:::${LogsBucketName}"
        RoleARN: !GetAtt FirehoseRole.Arn
        Prefix: !Ref LogsPrefix
        BufferingHints:
          SizeInMBs: !Ref WriteSizeMB
          IntervalInSeconds: !Ref WriteIntervalSeconds
        CompressionFormat: !Ref CompressionFormat
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: "/aws/kinesisfirehose/logs"
          LogStreamName: !Sub "${AWS::StackName}-LogStream"

Outputs:
  FirehoseStreamName:
    Value: !Ref FirehoseDeliveryStream
