AWSTemplateFormatVersion: '2010-09-09'
Description: Defines the resource required to have a cognito pool of clients for authentication handling

Parameters:
  CustomEmails:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Specify whether the emails sent by cognito to users should be customized by a lambda

Conditions:
  CustomEmailsCondition: !Equals
    - !Ref CustomEmails
    - 'true'

Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: clients
      LambdaConfig:
        CustomMessage: !GetAtt CognitoCustomMessageLambda.Arn
      AliasAttributes:  # the user can log in using the following in-place of the user name
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: false
      AutoVerifiedAttributes:
        - email
        - phone_number
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailSubjectByLink: Email confirmation
        EmailMessageByLink: 'Welcome, follow this link to confirm your account: {##this link##}'
        EmailSubject: Email confirmation
        EmailMessage: 'Welcome, use this code to confirm your email address: {####}'
        SmsMessage: 'Use this code to verify your phone number: {####}'
      SmsConfiguration:
        ExternalId: YourExternalId
        SnsCallerArn: !GetAtt SnsCallerRole.Arn
      MfaConfiguration: OPTIONAL
      EnabledMfas:
        - SMS_MFA
      Schema:
        - AttributeDataType: String
          Mutable: true
          Name: email
          Required: true
        - AttributeDataType: String
          Mutable: true
          Name: account_id
          Required: false
        - AttributeDataType: String
          Mutable: true
          Name: profile_id
          Required: false
  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Join
        - '-'
        - !Split
          - .
          - !ImportValue DomainName
      UserPoolId: !Ref CognitoUserPool
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MyUserPoolClient
      UserPoolId: !Ref CognitoUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
      AccessTokenValidity: 1
      IdTokenValidity: 1
      RefreshTokenValidity: 7
      TokenValidityUnits:
        AccessToken: hours
        IdToken: hours
        RefreshToken: days
  CognitoCustomMessageLambda:
    Condition: CustomEmailsCondition
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CognitoCustomMessageLambda
      Handler: index.lambda_handler
      Runtime: python3.12
      Role: !GetAtt CustomMessageLambdaExecutionRole.Arn
      Code:
        ZipFile: !Join
          - |+

          - - from urllib.parse import urlencode
            - !Join
              - ''
              - - domain_name = '
                - !ImportValue DomainName
                - ''''
            - ''
            - 'def lambda_handler(event, context):'
            - '    user = event[''userName'']'
            - '    code = event[''request''][''codeParameter'']'
            - '    args = urlencode({''user'': user, ''code'': code})'
            - '    if event[''triggerSource''] == ''CustomMessage_ForgotPassword'':'
            - '        event[''response''][''emailSubject''] = f''Reset Your Password for {domain_name}'''
            - '        event[''response''][''emailMessage''] = ('
            - '            ''Hello,<br><br>'''
            - '            ''To reset your password, please follow this link:<br>'''
            - '            f"https://www.{domain_name}/authentication/reset-forgot-password.html?{args}<br>"'
            - '            ''If you did not request a password reset, please ignore this email.'''
            - '        )'
            - '    elif event[''triggerSource''] in (''CustomMessage_SignUp'', ''CustomMessage_ResendCode''):'
            - '        event[''response''][''emailSubject''] = f''Confirm your {domain_name} account'''
            - '        event[''response''][''emailMessage''] = ('
            - '            ''Hello,<br><br>'''
            - '            ''Please confirm your email by following this link:<br>'''
            - '            f"https://www.{domain_name}/confirm-email/?{args}"'
            - '        )'
            - '    else:'
            - '        print(event)'
            - '    return event'
  CustomMessageLambdaExecutionRole:
    Condition: CustomEmailsCondition
    Type: AWS::IAM::Role
    Properties:
      RoleName: CustomMessageLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cognito-idp:*
                Resource: '*'
  CustomMessageLambdaLogGroup:
    Condition: CustomEmailsCondition
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/CognitoCustomMessageLambda
      RetentionInDays: 30
  CognitoLambdaInvokePermission:
    Condition: CustomEmailsCondition
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CognitoCustomMessageLambda
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}
  SnsCallerRole:
    Condition: CustomEmailsCondition
    Type: AWS::IAM::Role
    Properties:
      RoleName: CognitoSnsCallerRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cognito-idp.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CognitoSnsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: sns:Publish
                Resource: '*'

Outputs:
  CognitoUserPoolId:
    Value: !Ref CognitoUserPool
  CognitoUserPoolClientId:
    Value: !Ref CognitoUserPoolClient