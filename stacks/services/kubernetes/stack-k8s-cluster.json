{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template to create an EKS cluster",
    "Parameters": {
        "KubernetesVersion": {
            "Type": "String",
            "Default": "1.32",
            "Description": "Kubernetes version"
        },
        "SSHKeyName":
        {
            "Type": "String",
            "Description": "The name of an existing EC2 KeyPair to enable SSH access to the instances (optional). Leave empty to not use a key pair.",
            "Default": "benoit-favier-desktop"
        }
    },
    "Resources": {
        "ClusterRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "eks.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ClusterPodIdentityPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "eks:CreatePodIdentityAssociation",
                                        "eks:DeletePodIdentityAssociation",
                                        "eks:DescribePodIdentityAssociations"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
                ]
            }
        },
        "EKSCluster": {
            "Type": "AWS::EKS::Cluster",
            "Properties": {
                "Name": "EKS-Cluster",
                "Version": {"Ref": "KubernetesVersion"},
                "ResourcesVpcConfig": {
                    "SubnetIds": [
                        {"Fn::ImportValue": "PublicSubnetAId"},
                        {"Fn::ImportValue": "PublicSubnetBId"},
                        {"Fn::ImportValue": "PublicSubnetCId"}
                    ]
                },
                "RoleArn": { "Fn::GetAtt": ["ClusterRole", "Arn"] }
            }
        },
        "NodeInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "NodePodIdentityPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "eks-auth:AssumeRoleForPodIdentity"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
                ]
            }
        },
        "NodeSecurityGroup":
        {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties":
            {
                "GroupName": "EKS-NodeSecurityGroup",
                "GroupDescription": "Security group for runners",
                "VpcId": {"Fn::ImportValue": "PublicVpcId"},
                "SecurityGroupIngress":
                [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "-1",
                        "SourceSecurityGroupId": {"Fn::GetAtt": ["EKSCluster", "ClusterSecurityGroupId"]}
                    }
                ],
                "SecurityGroupEgress":
                [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "k8s.io/cluster-autoscaler/enabled",
                        "Value": "true"
                    }
                ]
            }
        },
        "NodeSecurityGroupSelfIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": { "Ref": "NodeSecurityGroup" },
                "IpProtocol": "-1",
                "SourceSecurityGroupId": { "Ref": "NodeSecurityGroup" }
            }
        },
        "ClusterSecurityGroupNodeIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {"Fn::GetAtt": ["EKSCluster", "ClusterSecurityGroupId"]},
                "IpProtocol": "-1",
                "SourceSecurityGroupId": {"Ref": "NodeSecurityGroup"}
            }
        },
        "PodIdentityAddon": {
            "Type": "AWS::EKS::Addon",
            "Properties": {
                "ClusterName": {"Ref": "EKSCluster"},
                "AddonName": "eks-pod-identity-agent",
                "ResolveConflicts": "OVERWRITE",
                "ServiceAccountRoleArn": {"Fn::GetAtt": ["ClusterRole", "Arn"]}
            }
        },
        "VpcCniAddon": {
            "Type": "AWS::EKS::Addon",
            "Properties": {
                "ClusterName": {"Ref": "EKSCluster"},
                "AddonName": "vpc-cni",
                "ResolveConflicts": "OVERWRITE",
                "ConfigurationValues": "{\"env\":{\"ENABLE_PREFIX_DELEGATION\":\"true\"}}"
            }
        }
    },
    "Conditions":
    {
        "HasSSHKeyName":
        {
            "Fn::Not": [{"Fn::Equals": [{"Ref": "SSHKeyName"}, ""]}]
        }
    },
    "Outputs": {
        "KubernetesCluster": {
            "Value": {"Ref": "EKSCluster"},
            "Export": {"Name": "KubernetesCluster"}
        },
        "KubernetesNodeRoleArn": {
            "Value": {"Fn::GetAtt": ["NodeInstanceRole", "Arn"]},
            "Export": {"Name": "KubernetesNodeRoleArn"}
        },
        "KubernetesNodeSecurityGroup": {
            "Value": {"Ref": "NodeSecurityGroup"},
            "Export": {"Name": "KubernetesNodeSecurityGroup"}
        },
        "KubernetesVersion": {
            "Value": {"Ref": "KubernetesVersion"},
            "Export": {"Name": "KubernetesVersion"}
        }
    }
}