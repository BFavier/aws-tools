AWSTemplateFormatVersion: '2010-09-09'
Description: Defines a load balancer

Parameters:
  VpcId:
    Type: String
    Description: ID of the VPC to start the instances in
  SubnetIds:
    Type: CommaDelimitedList
    Description: IDs of the subnets to start the instances in
  CertificateArn:
    Type: String
    Description: Arn of the ACM certificate
  DomainName:
    Type: String
    Description: The domain name corresponding to the ACM certificate

Conditions:
  HasSSHKeyName: !Not [!Equals ['', !Ref SSHKeyName]]

Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Application Load Balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-LoadBalancer
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Type: application
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: 404
            ContentType: text/plain
            MessageBody: "Not Found"
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: !Ref CertificateArn

Outputs:
  LoadBalancer:
    Value: !Ref LoadBalancer
  Listener:
    Value: !Ref Listener