AWSTemplateFormatVersion: '2010-09-09'
Description: Firehose to S3 pipeline

Parameters:
  LogsBucketName:
    Type: String
    Description: Name of the existing s3 bucket to log into

  LogsPrefix:
    Type: String
    Default: /
    Description: Prefix for the S3 bucket where logs will be stored
  CompressionFormat:
    Type: String
    Default: GZIP
    AllowedValues:
      - UNCOMPRESSED
      - GZIP
      - SNAPPY
    Description: Compression format for the logs in s3

Resources:
  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FirehoseS3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${LogsBucketName}${LogsPrefix}*"
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:DescribeLogStreams
                Resource: "arn:aws:logs:*:*:log-group:/aws/kinesisfirehose/*"

  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamType: DirectPut
      DeliveryStreamName: !Sub "${AWS::StackName}"
      S3DestinationConfiguration:
        BucketARN: !Sub "arn:aws:s3:::${LogsBucketName}"
        RoleARN: !GetAtt FirehoseRole.Arn
        Prefix: !Ref LogsPrefix
        BufferingHints:
          SizeInMBs: 5
          IntervalInSeconds: 900
        CompressionFormat: !Ref CompressionFormat
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: "/aws/kinesisfirehose/logs"
          LogStreamName: !Sub "${AWS::StackName}-LogStream"

Outputs:
  FirehoseStreamName:
    Value: !Ref FirehoseDeliveryStream
